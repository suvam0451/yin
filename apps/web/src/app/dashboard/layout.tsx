import {Inter} from 'next/font/google';

import '../globals.css';

const inter = Inter({subsets: ['latin']});

// Create a client
import '@mantine/core/styles.css';
import React from 'react';
import {Metadata} from 'next';

export const metadata: Metadata = {
	title: 'Yin\'s Dashboard | The All-In-One Configurator for Yin.',
	description:
		'Here, you can view and manage images generated by you and other discord' +
		' users.' + ' openGraph You can set the default visibility of your' +
		' profile and prompts. You can add and edit chatbot personas for Yin.'
	,
	openGraph: {
		url: 'https://yin.suvam.io',
		title: 'Yin\'s Dashboard | The All-In-One Configurator for Yin.',
		description: 'Here, you can view and manage images generated by you and other discord' +
			' users.' + ' openGraph You can set the default visibility of your' +
			' profile and prompts. You can add and edit chatbot personas for Yin.',
		images: [
			{
				url: `${process.env.NEXT_PUBLIC_STORAGE_ENDPOINTh}/site-banner.png`,
				width: 1578,
				height: 806,
				alt: 'Yin\'s Dashboard',
				type: 'image/png'
			},
			{
				url: `${process.env.NEXT_PUBLIC_STORAGE_ENDPOINT}/site-banner.png`,
				width: 1578,
				height: 806,
				alt: 'Yin\'s Dashboard',
				type: 'image/png'
			}
		],
		siteName: 'Project Yin'
	},
	twitter: {
		site: 'https://yin.suvam,io',
		title: 'Yin\'s Dashboard | The All-In-One Configurator for Yin.',
		description: 'Here, you can view and manage images generated by you and other discord' +
			' users.' + ' openGraph You can set the default visibility of your' +
			' profile and prompts. You can add and edit chatbot personas for Yin.',
		images: [
			{
				url: `${process.env.NEXT_PUBLIC_STORAGE_ENDPOINT}/site-banner.png`,
				width: 1578,
				height: 806,
				alt: 'Yin\'s Dashboard',
				type: 'image/png'
			},
			{
				url: `${process.env.NEXT_PUBLIC_STORAGE_ENDPOINTh}/site-banner.png`,
				width: 1578,
				height: 806,
				alt: 'Yin\'s Dashboard',
				type: 'image/png'
			}
		]
	}
};

export default function RootLayout({
	children
}: Readonly<{
	children: React.ReactNode;
}>) {
	return (
		<html lang="en">
		<body className={inter.className}>
		{children}
		</body>
		</html>
	);
}
